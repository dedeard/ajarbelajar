name: Laravel

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

      minio:
        image: minio/minio:latest
        env:
          MINIO_ACCESS_KEY: "your_minio_access_key"
          MINIO_SECRET_KEY: "your_minio_secret_key"
        ports:
          - 9000:9000
        options: --entrypoint "minio server /data"

      meilisearch:
        image: getmeili/meilisearch:latest
        ports:
          - 7700:7700

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.0'
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Configure .env for Redis, MinIO, and MeiliSearch
        run: |
          echo "BROADCAST_DRIVER=log" >> .env
          echo "CACHE_DRIVER=redis" >> .env
          echo "SESSION_DRIVER=redis" >> .env
          echo "QUEUE_CONNECTION=redis" >> .env
          echo "REDIS_HOST=redis" >> .env
          echo "REDIS_PASSWORD=null" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "FILESYSTEM_DRIVER=minio" >> .env
          echo "AWS_ENDPOINT_URL=http://minio:9000" >> .env
          echo "AWS_ACCESS_KEY_ID=your_minio_access_key" >> .env
          echo "AWS_SECRET_ACCESS_KEY=your_minio_secret_key" >> .env
          echo "SCOUT_DRIVER=meilisearch" >> .env
          echo "MEILISEARCH_HOST=http://meilisearch:7700" >> .env
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit
